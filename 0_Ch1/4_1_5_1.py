# 1.5 넘파이
# 1.5.1 넘파이 가져오기 p.36
import numpy as np
# 위와 같이 쓰면 넘파이를 np라는 이름으로 사용할 수 있다.
# 넘파이는 수치 계산을 위한 라이브러리이다.

# 1.5.2 넘파이 배열 생성하기 p.37
x = np.array([1.0, 2.0, 3.0])
print("x is",x) # [1. 2. 3.]
print("x type is",type(x)) # <class 'numpy.ndarray'>
# 넘파이 배열을 만들 때는 np.array() 메서드를 사용한다.
# 넘파이 배열은 넘파이의 ndarray 클래스의 객체이다.

# 1.5.3 넘파이의 산술 연산 p.37
x = np.array([1.0, 2.0, 3.0])
y = np.array([2.0, 4.0, 6.0])
print("x + y =",x+y) # [3. 6. 9.]
print("x - y =",x-y) # [-1. -2. -3.]
print("x * y =",x*y) # [ 2.  8. 18.]
print("x / y =",x/y) # [0.5 0.5 0.5]
# 넘파이 배열은 원소별로 계산한다.
# 배열의 크기가 같다면, 위와 같이 계산이 가능합니다. 

# 만약 배열과 스칼라값의 계산을 하고 싶다면, 넘파이 배열과 스칼라값의 계산을 원소별로 한다.
# 해당 기능을 브로드캐스트라고 합니다. 
x = np.array([1.0, 2.0, 3.0])
print("x * 2 =",x*2) # [2. 4. 6.]

# 1.5.4 넘파이의 N차원 배열 p.38
# 넘파이는 1차원 배열 뿐만 아니라 다차원 배열도 작성할 수 있습니다. 
A = np.array([[1,2],[3,4]])
print("A is",A) # [[1 2]
                #  [3 4]]
print("A shape is",A.shape) # (2, 2)
print("A dtype is",A.dtype) # int64
# 여기서 shape 은 A 의 행렬 형상
# dtype 은 A 요소의 자료형을 알려줍니다.

